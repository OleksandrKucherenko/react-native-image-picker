import groovy.json.JsonSlurper
import java.nio.file.Files

/** Get file of the project */
static File fileOfProject(prj, filePath) {
    final projectDir = prj.projectDir
    final resolvedDir = Files.isSymbolicLink(projectDir.toPath())
        ? Files.readSymbolicLink(projectDir.toPath())
        : projectDir.toPath()

    return new File("${resolvedDir}", filePath)
}

/** Extract property from rootProject if defined, otherwise use fallback value */
def safeExtGet(prop, fallback) {
    rootProject.ext.has(prop) ? rootProject.ext.get(prop) : fallback
}

/** Extract library version from `package.json` file */
def computeVersionName() {
    // dynamically retrieve version from package.json
    def slurper = new JsonSlurper()
    def json = slurper.parse(fileOfProject(project,'../package.json'), "utf-8")
    return json.version
}

buildscript {
    repositories {
        google()
        jcenter()
    }

    dependencies {
        classpath 'com.android.tools.build:gradle:3.1.4'
    }
}

apply plugin: 'com.android.library'

android {
    compileSdkVersion safeExtGet('compileSdkVersion', 27)
    buildToolsVersion safeExtGet('buildToolsVersion', '27.0.3')

    defaultConfig {
        minSdkVersion safeExtGet('minSdkVersion', 16)
        targetSdkVersion safeExtGet('targetSdkVersion', 26)

        versionCode 1
        versionName computeVersionName()
    }
    lintOptions {
        abortOnError false
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

repositories {
    jcenter()
    mavenCentral()
    google()
    maven {
        url "$projectDir/../Example/node_modules/react-native/android"
    }
    maven {
        url "$projectDir/../../react-native/android"
    }
}

dependencies {
    //noinspection GradleDynamicVersion
    api "com.facebook.react:react-native:+"  // From node_modules

    testImplementation "junit:junit:4.10"
    testImplementation "org.assertj:assertj-core:1.7.0"
    testImplementation "org.robolectric:robolectric:3.3.2"

    testImplementation "org.easytesting:fest-assert-core:${FEST_ASSERT_CORE_VERSION}"
    testImplementation "org.powermock:powermock-api-mockito:${POWERMOCK_VERSION}"
    testImplementation "org.powermock:powermock-module-junit4-rule:${POWERMOCK_VERSION}"
    testImplementation "org.powermock:powermock-classloading-xstream:${POWERMOCK_VERSION}"
    testImplementation "org.mockito:mockito-core:${MOCKITO_CORE_VERSION}"
}
